name: CI/CD Workflow

  # Workflow triggers
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

  # Environment Variables
env:
  PACKAGE_REGISTRY_TO_USE: nico8034
  PROJECT_NAME: PedalPro
  GROUP_NUMBER: Group06

jobs:
  # Create artifact to ensure consistency across all pipeline jobs
  clone-repository:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read 
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.0.0
      - name: Upload Repository Artifact
        uses: actions/upload-artifact@v3
        with:
          name: repository-artifact
          path: ./src/systems/

#  # Lint application
#  code-analysis:
#    runs-on: ubuntu-latest
#    needs: clone-repository
#    permissions:
#      contents: read
#    continue-on-error: true
#    steps:
#      - name: Download Repository Artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: repository-artifact
#          path: .
#      - name: Install dependencies
#        run: echo "Installing linter dependencies..."
#      - name: Run Linter
#        run: echo "Running linter..."
  
  # Build Assembly Application
  build-assembly-application:
    runs-on: ubuntu-latest
    needs: clone-repository
    steps:
      - name: Download Repository Artifact
        uses: actions/download-artifact@v3
        with:
          name: repository-artifact
          path: .
      - name: Setup Java and Maven
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build Assembly
        run:  |
          cd ./assembly/
          mvn compile
          mvn package
      - name: Upload Build Assembly System Artifact
        uses: actions/upload-artifact@v3
        with:
          name: assembly-build-artifact
          path: ./assembly/target # Replace with path to your compiled artifact

  # Build Supervisor Application
  build-supervisor-application:
    runs-on: ubuntu-latest
    needs: clone-repository
    steps:
      - name: Download Repository Artifact
        uses: actions/download-artifact@v3
        with:
          name: repository-artifact
          path: .
      - name: Setup Java and Maven
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build Supervisor
        run:  |
          cd ./supervisor/backend/
          mvn compile
          mvn package
      - name: Upload Build Supervisor System Artifact
        uses: actions/upload-artifact@v3
        with:
          name: supervisor-build-artifact
          path: .supervisor/backend/target

#  # Test application
#  test-application:
#    runs-on: ubuntu-latest
#    needs: [build-application,code-analysis]
#    # Allow pipeline to continue on error
#    continue-on-error: true
#    steps:
#      # Download build artifact and use for application tests
#      - name: Download build artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: build-artifact
#          path: ./build
#      - name: Test application
#        run: echo "Testing app..."

  build-push-docker-image:
    runs-on: ubuntu-latest
    needs: [clone-repository, build-assembly-application, build-supervisor-application]
    permissions:
      packages: write
      contents: read
    steps:
      - name: Download Repository Artifact
        uses: actions/download-artifact@v3
        with:
          name: repository-artifact
          path: .
      - name: Login to GitHub Package Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # Transform github.actor to lowercase
      - name: Transform username to lowercase
        run: echo "OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      # Building and pushing application image go to: GitHub -> Profile -> Packages
      - name: Build & Push assembly system image
        uses: docker/build-push-action@v3
        with:
          context: ./assembly/
          push: true
          tags: ghcr.io/${{ env.OWNER_LOWER }}/assembly-system:1.0-${{ github.sha }},ghcr.io/${{ env.OWNER_LOWER }}/assembly-system:latest
      - name: Build & Push supervisor system image
        uses: docker/build-push-action@v3
        with:
          context: ./supervisor/backend
          push: true
          tags: ghcr.io/${{ env.OWNER_LOWER }}/supervisor-system:1.0-${{ github.sha }},ghcr.io/${{ env.OWNER_LOWER }}/supervisor-system:latest
#
#  # Job for deploying the application, could be the logic for deploying to your VM
#  deploy-application:
#    runs-on: ubuntu-latest
#    needs: [build-push-docker-image]
#    continue-on-error: true
#    steps:
#      - name: Logic for deploying application
#        run: echo "deploy app"